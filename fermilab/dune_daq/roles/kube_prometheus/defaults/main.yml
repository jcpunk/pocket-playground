---
kube_prometheus_helm_repo_name: prometheus-community
kube_prometheus_helm_chart_name: kube-prometheus-stack
kube_prometheus_helm_release_name: prometheus

kube_prometheus_ensure: present
kube_prometheus_helm_version: NULL
kube_prometheus_create_namespace: "yes"
kube_prometheus_namespace: monitoring

kube_prometheus_grafana_password: admin

# If you set the "selector" series values
# then any resource you want prometheus to monitor
# must have a matching label.
#
# if you set the 'nil uses helm' values to false
# and the selectors to `{}` then prometheus just
# grabs everything it knows about.
#
# So, do you want one big prometheus, a few little
# ones, maybe some federation? You pick.

kube_prometheus_general_selector:
  release: "{{ kube_prometheus_helm_release_name }}"

kube_prometheus_rule_selector_niluseshelmvalues: true
kube_prometheus_rule_selector:
  matchLabels: "{{ kube_prometheus_general_selector }}"
kube_prometheus_rulenamespace_selector: {}

kube_prometheus_servicemonitor_selector_niluseshelmvalues: true
kube_prometheus_servicemonitor_selector:
  matchLabels: "{{ kube_prometheus_general_selector }}"
kube_prometheus_servicemonitornamespace_selector: {}

kube_prometheus_podmonitor_selector_niluseshelmvalues: true
kube_prometheus_podmonitor_selector:
  matchLabels: "{{ kube_prometheus_general_selector }}"
kube_prometheus_podmonitornamespace_selector: {}

kube_prometheus_probe_selector_niluseshelmvalues: true
kube_prometheus_probe_selector:
  matchLabels: "{{ kube_prometheus_general_selector }}"
kube_prometheus_probenamespace_selector: {}

kube_prometheus_alertmanagerconfig_selector: {}
kube_prometheus_alertmanagerconfignamespace_selector: {}

kube_prometheus_set_pod_security_admission: true
kube_prometheus_pod_security_enforce: privileged
kube_prometheus_pod_security_audit: baseline
kube_prometheus_pod_security_warn: baseline
